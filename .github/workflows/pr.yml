name: PR

on:
  pull_request:

jobs:
  check:
    name: Check for file modification
    outputs:
      run_job: ${{ steps.check_files.outputs.run_job }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Run checker
        id: check_files
        run: |
          echo "List modified files"
          git diff --name-only HEAD^ HEAD
          echo "Check paths of modified files"
          git diff --name-only HEAD^ HEAD >files.txt

          sssf=false
          sssfp=false

          while IFS= read -r file; do
            echo $file
            if [[ $file == src/SqlStreamStore.FSharp/* ]]; then
              sssf=true
            elif [[ $file == src/SqlStreamStore.FSharp.Postgres/* ]]; then
              sssfp=true
            fi
          done <files.txt

          rm -f files.txt

          if [ $sssf = true ] && [ $sssfp = true ]; then
            echo "::set-output name=run_jobs:all"
          elif [ $sssf = true ] && [ $sssfp = false ]; then
            echo "::set-output name=run_jobs:sssf"
          elif [ $sssf = false ] && [ $sssfp = true ]; then
            echo "::set-output name=run_jobs:sssfp"
          else
            echo "::set-output name=run_jobs:none"
          fi


  build-sss-f:
    needs: check
    if: needs.check.outputs.run_job == 'all'
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    name: Build on ${{ matrix.os }} using dotnet version ${{ matrix.dotnet }}
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: cd src/SqlStreamStore.FSharp; dotnet build --configuration Release

# Put back when you add tests        
#      - name: Test
#        run: dotnet test --no-restore