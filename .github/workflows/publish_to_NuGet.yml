name: Publish to nuget

on:
  release:
    types: [ created, edited ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - name: Restore
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore --configuration Release

  # Put back when you add tests        
  #      - name: Test
  #        run: dotnet test --no-restore

  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - name: Restore
        run: dotnet restore
      - name: Pack SQLStreamStore.FSharp
        working-directory: src/SqlStreamStore.FSharp
        run: dotnet pack --no-restore --configuration Release -p:PackageVersion=${GITHUB_REF/refs\/tags\/v/''} --include-symbols --include-source
      - name: Pack SqlStreamStore.FSharp.Postgres
        working-directory: src/SqlStreamStore.FSharp.Postgres
        run: dotnet pack --no-restore --configuration Release -p:PackageVersion=${GITHUB_REF/refs\/tags\/v/''} --include-symbols --include-source
      - name: Publish SQLStreamStore.FSharp to NuGet
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.SQLSTREAMSTORE_NUGET_AUTH_TOKEN }}
        run: dotnet nuget push src/SqlStreamStore.FSharp/bin/Release/*.nupkg --skip-duplicate --source https://api.nuget.org/v3/index.json -k ${NUGET_AUTH_TOKEN}
      - name: Publish SqlStreamStore.FSharp.Postgres to NuGet
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.SQLSTREAMSTORE_POSTGRES_NUGET_AUTH_TOKEN }}
        run: dotnet nuget push src/SqlStreamStore.FSharp.Postgres/bin/Release/*.nupkg --skip-duplicate --source https://api.nuget.org/v3/index.json -k ${NUGET_AUTH_TOKEN}
