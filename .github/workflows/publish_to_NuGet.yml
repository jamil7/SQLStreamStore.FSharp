name: Publish to nuget

on:
  release:
    types: [ created, edited ]

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    name: Build on ${{ matrix.os }} using dotnet version ${{ matrix.dotnet }}
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: dotnet build --configuration Release

  # Put back when you add tests        
  #      - name: Test
  #        run: dotnet test --no-restore

  publish-sss-f:
    runs-on: ubuntu-latest
    needs: build-sss-f
    steps:
      - uses: actions/checkout@v2
      - name: Create the package
        run: cd src/SqlStreamStore.FSharp; dotnet pack --configuration Release -o ReleaseSSSF -p:PackageVersion=${GITHUB_REF/refs\/tags\/v/''} --include-source
      - name: Publish the package to NuGet
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.SQLSTREAMSTORE_NUGET_AUTH_TOKEN }}
        run: dotnet nuget push ReleaseSSSF/*.nupkg --skip-duplicate --no-symbols true --source https://api.nuget.org/v3/index.json -k ${NUGET_AUTH_TOKEN}

  publish-sss-f-postgres:
    runs-on: ubuntu-latest
    needs: build-sss-f-postgres
    steps:
      - uses: actions/checkout@v2
      - name: Create the package
        run: cd src/SqlStreamStore.FSharp.Postgres; dotnet pack --configuration Release -o ReleaseSSSFP -p:PackageVersion=${GITHUB_REF/refs\/tags\/v/''} --include-source
      - name: Publish the package to NuGet
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.SQLSTREAMSTORE_POSTGRES_NUGET_AUTH_TOKEN }}
        run: dotnet nuget push ReleaseSSSFP/*.nupkg --skip-duplicate --no-symbols true --source https://api.nuget.org/v3/index.json -k ${NUGET_AUTH_TOKEN}
